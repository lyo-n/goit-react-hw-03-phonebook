{"version":3,"sources":["components/filter/filter.module.css","components/contactForm/contactForm.module.css","components/contacts/contacts.jsx","components/contactForm/contactForm.jsx","components/filter/filter.jsx","components/APP.jsx","index.js","components/contacts/contacts.module.css"],"names":["module","exports","ContactList","contacts","removeContact","className","styles","list","map","contact","item","name","number","btn","type","onClick","id","ContactForm","state","change","e","target","value","setState","inputSubmit","preventDefault","props","addContact","this","onSubmit","form","formBlock","label","inpt","onChange","Component","Filter","changeFilter","searchBlock","APP","filter","contactAdd","quest","ques","includes","alert","length","uuidv4","prevent","onFilter","getContacts","toLowerCase","delContacts","contactForId","localStorage","getItem","parsedContacts","JSON","parse","prevState","nextContacts","setItem","stringify","recorderContact","ReactDOM","render","document","querySelector"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,WAAa,6B,uCCAzED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,MAAQ,2BAA2B,KAAO,0BAA0B,IAAM,2B,6ICuBzJC,EApBK,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,cAAZ,OAChB,oBAAIC,UAAWC,IAAOC,KAAtB,SACIJ,EAASK,KAAI,SAACC,GAAD,OACd,qBAAqBJ,UAAWC,IAAOI,KAAvC,UACKD,EAAQE,KAAO,KAAOF,EAAQG,OAC9B,wBAAQP,UAAWC,IAAOO,IAAKC,KAAK,SAASH,KAAK,SAASI,QAAS,kBAAMX,EAAcK,EAAQO,KAAhG,sBAFIP,EAAQO,U,uBCHHC,E,4MACjBC,MAAQ,CACJP,KAAM,GACNC,OAAQ,I,EAGZO,OAAS,SAACC,GAAO,IAAD,EACUA,EAAEC,OAAjBV,EADK,EACLA,KAAMW,EADD,EACCA,MACb,EAAKC,SAAL,eACKZ,EAAQW,K,EAIjBE,YAAc,SAACJ,GACXA,EAAEK,iBAEF,EAAKC,MAAMC,WAAX,eAA2B,EAAKT,QAChC,EAAKK,SAAU,CAACZ,KAAM,GAAIC,OAAQ,M,uDAG5B,IAAD,EACoBgB,KAAKV,MAAtBP,EADH,EACGA,KAAMC,EADT,EACSA,OACd,OACI,uBAAMiB,SAAUD,KAAKJ,YAAanB,UAAWC,IAAOwB,KAApD,UACI,sBAAKzB,UAAWC,IAAOyB,UAAvB,UACA,wBAAO1B,UAAWC,IAAO0B,MAAzB,iBAEI,uBAAQ3B,UAAWC,IAAO2B,KAClBnB,KAAK,OACLH,KAAK,OACLW,MAAOX,EACPuB,SAAUN,KAAKT,YAG3B,wBAAOd,UAAWC,IAAO0B,MAAzB,mBAEI,uBAAQ3B,UAAWC,IAAO2B,KAClBnB,KAAK,OACLH,KAAK,SACLW,MAAOV,EACPsB,SAAUN,KAAKT,eAI3B,wBAAQd,UAAWC,IAAOO,IAAKC,KAAK,SAApC,gC,GA5CyBqB,a,iBCA1B,SAASC,EAAT,GAAyC,IAAvBd,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,aACpC,OACI,sBAAKhC,UAAWC,IAAOgC,YAAvB,kCAEI,uBAAQxB,KAAK,OAAOQ,MAAOA,EAAOY,SAAY,SAACd,GAAD,OAAOiB,EAAajB,EAAEC,OAAOC,a,UCDlEiB,E,4MACjBrB,MAAQ,CACJf,SAAU,CACR,CAACa,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC5C,CAACI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,aAC7C,CAACI,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC5C,CAACI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,cAG/C4B,OAAQ,I,EAkBZC,WAAa,SAACC,GAEV,GADmB,EAAKxB,MAAMf,SAASK,KAAI,SAACmC,GAAD,OAAUA,EAAKhC,QAAMiC,SAASF,EAAM/B,MAE3EkC,MAAK,iGAAsBH,EAAM/B,KAA5B,0FACF,GAA0B,IAAtB+B,EAAM/B,KAAKmC,OAClBD,MAAK,mKACF,CACH,IAAMpC,EAAO,2BACNiC,GADM,IACC1B,GAAI+B,gBAGlB,EAAKxB,UAAS,SAACyB,GAAD,MAAa,CACvB7C,SAAS,GAAD,mBAAM6C,EAAQ7C,UAAd,CAAwBM,U,EAK5CwC,SAAW,SAACT,GACR,EAAKjB,SAAS,CAACiB,Y,EAGnBU,YAAc,WAAO,IAAD,EACW,EAAKhC,MAAzBf,EADS,EACTA,SAAUqC,EADD,EACCA,OACjB,OAAOrC,EAASqC,QAAO,SAACrC,GAAD,OACvBA,EAASQ,KAAKwC,cAAcP,SAASJ,EAAOW,mB,EAIhDC,YAAc,SAACC,GACX,EAAK9B,UAAS,SAACyB,GACX,MAAO,CACH7C,SAAU6C,EAAQ7C,SAASqC,QAAO,qBAAExB,KAAeqC,U,kEA9C3D,IAAMlD,EAAWmD,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMvD,GAE9BqD,GACF5B,KAAKL,SAAS,CAAEpB,SAAUqD,M,yCAGbG,GACf,IAAMC,EAAehC,KAAKV,MAAMf,SAG5ByD,IAFiBD,EAAUxD,UAG7BmD,aAAaO,QAAQ,WAAYJ,KAAKK,UAAUF,M,+BAwClD,IAAMG,EAAkBnC,KAAKsB,cACtBV,EAAUZ,KAAKV,MAAfsB,OACP,OACI,gCACI,2CACA,cAAC,EAAD,CAAab,WAAcC,KAAKa,aAChC,0CACE,cAACL,EAAD,CAAQd,MAAOkB,EAAQH,aAAcT,KAAKqB,WAC3Cc,EAAgBjB,OAAS,GAAM,cAAC,EAAD,CAAa3C,SAAY4D,EAAiB3D,cAAiBwB,KAAKwB,qB,GAxE/EjB,aCHjC6B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,W,kBCH/CnE,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,yB","file":"static/js/main.cbeb814e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBlock\":\"filter_searchBlock__bbweJ\",\"searchInpt\":\"filter_searchInpt__2DfXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3E6Oc\",\"formBlock\":\"contactForm_formBlock__1agDH\",\"label\":\"contactForm_label__2my22\",\"inpt\":\"contactForm_inpt__3_i02\",\"btn\":\"contactForm_btn__hBYVC\"};","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './contacts.module.css';\r\n\r\nconst ContactList = ({contacts, removeContact}) => (\r\n    <ul className={styles.list}>\r\n       {contacts.map((contact) => (\r\n       <li key={contact.id} className={styles.item}>\r\n           {contact.name + \": \" + contact.number}\r\n           {<button className={styles.btn} type=\"button\" name=\"delete\" onClick={() => removeContact(contact.id)}>Delete</button>}\r\n       </li>\r\n       ))} \r\n    </ul>\r\n);  \r\n\r\nContactList.propTypes = {\r\n    removeContact: propTypes.func.isRequired,\r\n    contacts: propTypes.arrayOf(propTypes.shape({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string.isRequired,\r\n    })),\r\n}\r\n\r\nexport default ContactList;\r\n","import React, {Component} from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './contactForm.module.css'\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n      };\r\n\r\n    change = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name] : value,\r\n        });\r\n    };\r\n    \r\n    inputSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.addContact({ ...this.state});\r\n        this.setState ({name: \"\", number: \"\"});\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.inputSubmit} className={styles.form}> \r\n                <div className={styles.formBlock}>\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input  className={styles.inpt}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}     \r\n                            onChange={this.change}   \r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Number\r\n                    <input  className={styles.inpt}\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={this.change}\r\n                    />\r\n                </label>\r\n                </div>\r\n                <button className={styles.btn} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    addContact: propTypes.func.isRequired,\r\n    // name: propTypes.string.isRequired,\r\n    // number: propTypes.string.isRequired,\r\n  };","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nexport default function Filter ({value, changeFilter}) {\r\n    return (\r\n        <div className={styles.searchBlock}>\r\n            Find contacts by name\r\n            <input  type=\"text\" value={value} onChange = {(e) => changeFilter(e.target.value)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: propTypes.string.isRequired,\r\n    changeFilter: propTypes.func.isRequired,\r\n};","import React, {Component} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './contacts/contacts';\r\nimport ContactForm from './contactForm/contactForm';\r\nimport Filter from './filter/filter';\r\nimport  './app/app.module.css';\r\n\r\nexport default class APP extends Component {\r\n    state = {\r\n        contacts: [\r\n          {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n          {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n          {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n          {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n    \r\n        filter: \"\",\r\n    };\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n    \r\n        if (parsedContacts) {\r\n          this.setState({ contacts: parsedContacts });\r\n        }\r\n    }\r\n    componentDidUpdate(prevState) {\r\n        const nextContacts = this.state.contacts;\r\n        const prevContacts = prevState.contacts;\r\n    \r\n        if (nextContacts !== prevContacts) {\r\n          localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n        }\r\n    }\r\n    contactAdd = (quest) => {\r\n        const searchName = this.state.contacts.map((ques) => ques.name).includes(quest.name);\r\n        if (searchName) {\r\n            alert (`Контакт с именем ${quest.name} уже существует`);\r\n        } else if (quest.name.length === 0) {\r\n            alert (`Заполните обязательные поля!!!`)\r\n        } else {\r\n            const contact = {\r\n                ...quest, id: uuidv4(),\r\n            };\r\n            \r\n            this.setState((prevent) =>({\r\n                contacts: [...prevent.contacts, contact],\r\n            }));\r\n        }   \r\n    };\r\n\r\n    onFilter = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    getContacts = () => {\r\n        const {contacts, filter} = this.state;\r\n        return contacts.filter((contacts) =>\r\n        contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    };\r\n\r\n    delContacts = (contactForId) => {\r\n        this.setState((prevent) =>{\r\n            return {\r\n                contacts: prevent.contacts.filter(({id}) => id !== contactForId),\r\n            };\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const recorderContact = this.getContacts();\r\n        const {filter} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm addContact = {this.contactAdd}/>\r\n                <h2>Contacts</h2>\r\n                {(<Filter value={filter} changeFilter={this.onFilter}/>)}\r\n                {recorderContact.length > 0 && (<ContactList contacts = {recorderContact} removeContact = {this.delContacts}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport APP from './components/APP';\r\n\r\nReactDOM.render(<APP/>, document.querySelector('#root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__2jKGf\",\"item\":\"contacts_item__gdPq_\",\"btn\":\"contacts_btn__1DJwz\"};"],"sourceRoot":""}